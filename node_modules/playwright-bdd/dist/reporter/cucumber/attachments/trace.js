"use strict";
/**
 * Copy trace viewer to the report folder.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTraceUrl = exports.isTraceAttachment = exports.copyTraceViewer = void 0;
const node_path_1 = __importDefault(require("node:path"));
const node_fs_1 = __importDefault(require("node:fs"));
const paths_1 = require("../../../utils/paths");
function getTraceViewerFolder() {
    const pwCorePath = require.resolve('playwright-core');
    // See: https://github.com/microsoft/playwright/blob/release-1.37/packages/playwright-test/src/reporters/html.ts#L276
    const traceViewerFolderTill137 = node_path_1.default.join(pwCorePath, '..', 'lib', 'webpack', 'traceViewer');
    // See: https://github.com/microsoft/playwright/blob/release-1.38/packages/playwright/src/reporters/html.ts#L295
    const traceViewerFolderSince138 = node_path_1.default.join(pwCorePath, '..', 'lib', 'vite', 'traceViewer');
    return node_fs_1.default.existsSync(traceViewerFolderSince138)
        ? traceViewerFolderSince138
        : traceViewerFolderTill137;
}
// eslint-disable-next-line visual/complexity
async function copyTraceViewer(reportDir) {
    const traceViewerFolder = getTraceViewerFolder();
    const traceViewerTargetFolder = node_path_1.default.join(reportDir, 'trace');
    const traceViewerAssetsTargetFolder = node_path_1.default.join(traceViewerTargetFolder, 'assets');
    node_fs_1.default.mkdirSync(traceViewerAssetsTargetFolder, { recursive: true });
    for (const file of node_fs_1.default.readdirSync(traceViewerFolder)) {
        if (file.endsWith('.map') || file.includes('watch') || file.includes('assets'))
            continue;
        await (0, paths_1.copyFileAndMakeWritable)(node_path_1.default.join(traceViewerFolder, file), node_path_1.default.join(traceViewerTargetFolder, file));
    }
    for (const file of node_fs_1.default.readdirSync(node_path_1.default.join(traceViewerFolder, 'assets'))) {
        if (file.endsWith('.map') || file.includes('xtermModule'))
            continue;
        await (0, paths_1.copyFileAndMakeWritable)(node_path_1.default.join(traceViewerFolder, 'assets', file), node_path_1.default.join(traceViewerAssetsTargetFolder, file));
    }
}
exports.copyTraceViewer = copyTraceViewer;
function isTraceAttachment(attachment) {
    return attachment.fileName === 'trace';
}
exports.isTraceAttachment = isTraceAttachment;
function generateTraceUrl(attachment) {
    return `trace/index.html?trace=${attachment.url}`;
}
exports.generateTraceUrl = generateTraceUrl;
//# sourceMappingURL=trace.js.map